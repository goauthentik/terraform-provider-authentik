name: test
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: "0 13 * * *"

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Build
        run: |
          go build -v .
  test:
    name: Acceptance tests - Terraform ${{ matrix.terraform }} - authentik ${{ matrix.authentik_version }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        allow_failure: [false]
        terraform:
          - "beta"
          - "rc"
          - "latest"
        authentik_version:
          - "beta"
        include:
          - authentik_version: "stable"
            terraform: latest
            allow_failure: true
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.4.0
        with:
          go-version-file: go.mod
          cache: true
      - uses: goauthentik/action-setup-authentik@224742cef59f3d90fdd68ec7d300f513303a1655
        id: setup
        with:
          version: ${{ matrix.authentik_version }}
          sentry_env: goauthentik-terraform-ci
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: TF acceptance tests
        timeout-minutes: 30
        env:
          TF_ACC: "1"
          AUTHENTIK_TOKEN: ${{ steps.setup.outputs.admin_token }}
          AUTHENTIK_URL: ${{ steps.setup.outputs.http_url }}
        run: |
          go test \
            -p 1 \
            -v \
            -coverprofile=coverage.txt \
            -covermode=atomic \
            -cover \
            ./pkg/provider/ 2>&1 | tee test-output
      - if: ${{ always() }}
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          $(go env GOPATH)/bin/go-junit-report -in test-output -set-exit-code -iocopy -out junit.xml
      - name: authentik Server logs
        if: ${{ always() }}
        run: |
          docker logs ${{ steps.setup.outputs.server_container_id }}
      - name: authentik Worker logs
        if: ${{ always() }}
        run: |
          docker logs ${{ steps.setup.outputs.worker_container_id }}
      - if: ${{ always() }}
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86
        with:
          paths: junit.xml
          show: "fail"
      - if: ${{ always() }}
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: authentik-${{ matrix.authentik_version }}
      - if: ${{ always() }}
        uses: codecov/test-results-action@f2dba722c67b86c6caa034178c6e4d35335f6706
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: authentik-${{ matrix.authentik_version }}
